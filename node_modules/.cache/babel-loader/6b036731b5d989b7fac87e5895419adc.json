{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT-COURSE\\\\auth-tokens\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nlet logoutTimer;\n\nconst calculateRemaingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedExpirationTime = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemaingTime(storedExpirationTime);\n\n  if (remainingTime <= 6000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    const remainingTime = calculateRemaingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      console.log(tokenData.duration);\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  });\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"L2bW835tQrrRIEGrbocDu1Um6yQ=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useEffect","useState","AuthContext","createContext","token","isLoggedIn","login","logout","logoutTimer","calculateRemaingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationTime","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","console","log","contextValue","children"],"sources":["E:/REACT-COURSE/auth-tokens/src/store/auth-context.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\n\r\nconst AuthContext = React.createContext({\r\n    token:'',\r\n    isLoggedIn: false,\r\n    login:(token)=>{},\r\n    logout:()=>{}\r\n})\r\n\r\nlet logoutTimer;\r\n\r\nconst calculateRemaingTime = (expirationTime) =>{\r\n    const currentTime = new Date().getTime();\r\n    const adjExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingDuration = adjExpirationTime - currentTime;\r\n\r\n    return remainingDuration;\r\n\r\n}\r\n\r\nconst retrieveStoredToken = () =>{\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedExpirationTime = localStorage.getItem('expirationTime')\r\n    const remainingTime = calculateRemaingTime(storedExpirationTime)\r\n\r\n    if(remainingTime<=6000){\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('expirationTime');\r\n        return null;\r\n    }\r\n    return {\r\n        token: storedToken,\r\n        duration: remainingTime\r\n    }\r\n}\r\n \r\nexport const AuthContextProvider = (props) =>{\r\n    const tokenData = retrieveStoredToken();\r\n    let initialToken;\r\n    if(tokenData){\r\n        initialToken = tokenData.token;\r\n    }\r\n   \r\n    const[token,setToken] = useState(initialToken);\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logoutHandler = () =>{\r\n        setToken(null)\r\n        localStorage.removeItem('token');\r\n\r\n        if(logoutTimer){\r\n            clearTimeout(logoutTimer)\r\n        }\r\n    }\r\n\r\n    const loginHandler = (token, expirationTime) =>{\r\n        setToken(token)\r\n        localStorage.setItem('token', token)\r\n\r\n        const remainingTime = calculateRemaingTime(expirationTime)\r\n\r\n       logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(tokenData){\r\n            console.log(tokenData.duration)\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration)\r\n        }\r\n    })\r\n\r\n    const contextValue = {\r\n\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout:logoutHandler\r\n\r\n    }\r\n \r\n    return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>;\r\n}\r\n\r\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;EACpCC,KAAK,EAAC,EAD8B;EAEpCC,UAAU,EAAE,KAFwB;EAGpCC,KAAK,EAAEF,KAAD,IAAS,CAAE,CAHmB;EAIpCG,MAAM,EAAC,MAAI,CAAE;AAJuB,CAApB,CAApB;AAOA,IAAIC,WAAJ;;AAEA,MAAMC,oBAAoB,GAAIC,cAAD,IAAmB;EAC5C,MAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;EACA,MAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;EAEA,MAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;EAEA,OAAOI,iBAAP;AAEH,CARD;;AAUA,MAAMC,mBAAmB,GAAG,MAAK;EAC7B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;EACA,MAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;EACA,MAAME,aAAa,GAAGZ,oBAAoB,CAACW,oBAAD,CAA1C;;EAEA,IAAGC,aAAa,IAAE,IAAlB,EAAuB;IACnBH,YAAY,CAACI,UAAb,CAAwB,OAAxB;IACAJ,YAAY,CAACI,UAAb,CAAwB,gBAAxB;IACA,OAAO,IAAP;EACH;;EACD,OAAO;IACHlB,KAAK,EAAEa,WADJ;IAEHM,QAAQ,EAAEF;EAFP,CAAP;AAIH,CAdD;;AAgBA,OAAO,MAAMG,mBAAmB,GAAIC,KAAD,IAAU;EAAA;;EACzC,MAAMC,SAAS,GAAGV,mBAAmB,EAArC;EACA,IAAIW,YAAJ;;EACA,IAAGD,SAAH,EAAa;IACTC,YAAY,GAAGD,SAAS,CAACtB,KAAzB;EACH;;EAED,MAAK,CAACA,KAAD,EAAOwB,QAAP,IAAmB3B,QAAQ,CAAC0B,YAAD,CAAhC;EAEA,MAAME,cAAc,GAAG,CAAC,CAACzB,KAAzB;;EAEA,MAAM0B,aAAa,GAAG,MAAK;IACvBF,QAAQ,CAAC,IAAD,CAAR;IACAV,YAAY,CAACI,UAAb,CAAwB,OAAxB;;IAEA,IAAGd,WAAH,EAAe;MACXuB,YAAY,CAACvB,WAAD,CAAZ;IACH;EACJ,CAPD;;EASA,MAAMwB,YAAY,GAAG,CAAC5B,KAAD,EAAQM,cAAR,KAA0B;IAC3CkB,QAAQ,CAACxB,KAAD,CAAR;IACAc,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8B7B,KAA9B;IAEA,MAAMiB,aAAa,GAAGZ,oBAAoB,CAACC,cAAD,CAA1C;IAEDF,WAAW,GAAG0B,UAAU,CAACJ,aAAD,EAAgBT,aAAhB,CAAxB;EACF,CAPD;;EASArB,SAAS,CAAC,MAAI;IACV,IAAG0B,SAAH,EAAa;MACTS,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACH,QAAtB;MACAf,WAAW,GAAG0B,UAAU,CAACJ,aAAD,EAAgBJ,SAAS,CAACH,QAA1B,CAAxB;IACH;EACJ,CALQ,CAAT;EAOA,MAAMc,YAAY,GAAG;IAEjBjC,KAAK,EAAEA,KAFU;IAGjBC,UAAU,EAAEwB,cAHK;IAIjBvB,KAAK,EAAE0B,YAJU;IAKjBzB,MAAM,EAACuB;EALU,CAArB;EASA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEO,YAA7B;IAAA,UAA4CZ,KAAK,CAACa;EAAlD;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CA9CM;;GAAMd,mB;;KAAAA,mB;AAgDb,eAAetB,WAAf"},"metadata":{},"sourceType":"module"}