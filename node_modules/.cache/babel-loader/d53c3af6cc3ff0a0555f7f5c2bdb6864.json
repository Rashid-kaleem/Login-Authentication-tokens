{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT-COURSE\\\\auth-tokens\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDnRtFOCAnXsDOLdA-lhQiONK3yAgz_4nk';\n    } else {\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDnRtFOCAnXsDOLdA-lhQiONK3yAgz_4nk';\n    }\n\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      setIsLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = 'Authenticationa Failed';\n\n          if (data && data.error && data.error.message) {\n            errorMessage = data.error.message;\n          }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      const expirationTime = new Date(new Date().getTime() + +data.expiresIn * 1000);\n      authCtx.login(data.idToken, expirationTime.toISOString());\n      history.replace('/');\n    }).catch(err => {\n      alert(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"BZqilAbiRVuCDogzWBpc2n7lqb8=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useContext","useRef","useState","AuthContext","useHistory","classes","AuthForm","isLogin","setIsLogin","isLoading","setIsLoading","history","emailInputRef","passwordInputRef","authCtx","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","error","message","Error","expirationTime","Date","getTime","expiresIn","login","idToken","toISOString","replace","catch","err","alert","auth","control","actions","toggle"],"sources":["E:/REACT-COURSE/auth-tokens/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useContext, useRef, useState } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport { useHistory } from 'react-router-dom';\n\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const[isLoading,setIsLoading] = useState(false);\n\n  const history=  useHistory();\n\n\n  const emailInputRef  = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) =>{\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setIsLoading(true);\n    let url;\n\n    if(isLogin){\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDnRtFOCAnXsDOLdA-lhQiONK3yAgz_4nk';\n\n    }\n    else{\n      url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDnRtFOCAnXsDOLdA-lhQiONK3yAgz_4nk'\n    }\n\n    fetch(url,\n      {\n\n        method:'POST',\n        body: JSON.stringify({\n          email:enteredEmail,\n          password:enteredPassword,\n          returnSecureToken:true\n        }),\n        headers:{\n          'Content-Type':'application/json'\n        }\n      }).then(res=>{\n        setIsLoading(false);\n        if(res.ok){\n          return res.json();\n\n        }else{\n          return res.json().then((data)=>{\n\n            let errorMessage = 'Authenticationa Failed';\n            if(data && data.error && data.error.message){\n              errorMessage = data.error.message\n              \n            }\n            \n            throw new Error(errorMessage);\n\n          })\n        \n        }\n      }).then(data=>{\n\n        const expirationTime = new Date((new Date().getTime() + (+data.expiresIn * 1000)));\n        authCtx.login(data.idToken, expirationTime.toISOString())\n        history.replace('/');\n        \n      }).catch(err=>{\n        alert(err.message);\n      });\n\n  }\n\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' required ref={passwordInputRef} />\n        </div>\n        <div className={classes.actions}>\n         {!isLoading && <button>{isLogin ? 'Login' : 'Create Account'}</button>}\n         {isLoading && <p>Sending Request</p>}\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}